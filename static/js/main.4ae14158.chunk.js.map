{"version":3,"sources":["store/actions.js","store/reducer.js","components/search/Search.js","components/categories/Categories.js","components/movie_list/Movie_list_item.js","components/movie_list/Movie_list.js","App.js","index.js"],"names":["URL_BASE","API_KEY","URL_TAIL","initPopularMovies","dispatch","axios","get","then","response","type","movies","data","results","catch","error","console","log","initTopRatedMovies","initUpcommingMovies","initialState","search","selectedMoiveId","base_url","poster_size","reducer","state","action","text","movie_id","Search","searchHandler","event","preventDefault","props","onInitSearchedMovies","searchText","className","placeholder","value","this","onChange","newSearch","onClick","Component","connect","e","target","query","SEARCH_QUERY","actionTypes","Categories","onInitPopularMovies","onInitTopRatedMovies","onInitUpcommingMovies","Movie_list_item","src","poster","alt","clicked","releasedate","vote","Movie_list","movieClickedHandler","id","onMovieIdClick","selectedMovieId","movielist","map","movie","key","title","release_date","vote_average","poster_path","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ae14158.chunk.js","sourcesContent":["import axios from 'axios'\n// import R from './reducer'\n\n\nexport const FILTER_BY_VALUE = 'FILTER_BY_VALUE'\nexport const INIT_MOVIE_ID = 'INIT_MOVIE_ID'\nexport const SET_POPULAR_MOVIES = 'SET_POPULAR_MOVIES'\nexport const SET_TOP_RATED_MOVIES = 'SET_TOP_RATED_MOVIES'\nexport const SET_UPCOMMING_MOVIES = 'SET_UPCOMMING_MOVIES'\n\nexport const SET_SEARCHED_MOVIES = 'SET_SEARCHED_MOVIES'\n\n\nconst URL_BASE = 'https://api.themoviedb.org/3/movie/'\nconst POPULAR = 'popular'\nconst TOP_RATED = 'top_rated'\nconst UPCOMING = 'upcoming'\nconst API_KEY = '?api_key=957c988676c0d274a6d1cc76dd5c8a93'\nconst URL_TAIL = '&language=en-US&page=1'\n\n\nconst SEARCH_BASE = 'https://api.themoviedb.org/3/search/movie'\nconst LANG_Q = '&language=en-US&query='\n\n// let SEARCH_QUERY = 'last' \nconst SEARCH_TAIL = '&page=1&include_adult=true'\n\n\n\nexport const setPopularMovies = (movies) => {\n    return {\n        type: SET_POPULAR_MOVIES,\n        movies: movies\n    }\n}\n\nexport const initPopularMovies = () => {\n    return dispatch => {\n        axios.get(URL_BASE + POPULAR + API_KEY + URL_TAIL)\n            .then(response => {\n                dispatch(setPopularMovies(response.data.results));\n            })\n            .catch(error =>{\n                console.log('An error while getting data!')\n            });\n    }\n}\n\n\n\n\nexport const setTopRatedMovies = (movies) => {\n    return {\n        type: SET_TOP_RATED_MOVIES,\n        movies: movies\n    }\n}\n\nexport const initTopRatedMovies = () => {\n    return dispatch => {\n        axios.get(URL_BASE + TOP_RATED + API_KEY + URL_TAIL)\n            .then(response => {\n                dispatch(setTopRatedMovies(response.data.results));\n            })\n            .catch(error => {\n                console.log('An error while getting data!')\n            });\n    }\n}\n\n\nexport const setUpcommingMovies = (movies) => {\n    return {\n        type: SET_UPCOMMING_MOVIES,\n        movies: movies\n    }\n}\n\nexport const initUpcommingMovies = () => {\n    return dispatch => {\n        axios.get(URL_BASE + UPCOMING + API_KEY + URL_TAIL)\n        .then(response =>{\n            dispatch(setUpcommingMovies(response.data.results));\n        })\n        .catch(error => {\n            console.log('An error while getting data!')\n        });\n    }\n}\n\nexport const setSearchedMovies = (movies) => {\n    return {\n        type: SET_SEARCHED_MOVIES,\n        movies: movies\n    }\n}\n\n\nexport const initSearchedMovies = (query) => {\n    let SEARCH_QUERY = query\n    return dispatch => {\n        axios.get(SEARCH_BASE + API_KEY + LANG_Q + SEARCH_QUERY + SEARCH_TAIL)\n            .then(response => {\n                dispatch(setSearchedMovies(response.data.results))\n            })\n            .catch(error => {\n                console.log('An error while getting data!')\n            });\n    }\n}\n\n\n\n\n\n","import * as actionTypes from './actions'\n\nconst initialState = {\n    search: '',\n    movies: null,\n    selectedMoiveId: null,\n\n    base_url: 'http://image.tmdb.org/t/p/',\n    poster_size: 'w342',\n}\n\nconst reducer = (state = initialState, action) =>{\n    switch (action.type) {\n        case actionTypes.FILTER_BY_VALUE:\n            return {\n                ...state,\n                search: action.text,\n            };\n        case actionTypes.INIT_MOVIE_ID:\n            return {\n                ...state,\n                selectedMoiveId: action.movie_id\n            };\n\n        case actionTypes.SET_POPULAR_MOVIES:\n            return {\n                ...state,\n                search: '',\n                movies: action.movies\n            };\n        case actionTypes.SET_TOP_RATED_MOVIES:\n            return {\n                ...state,\n                search: '',\n                movies: action.movies\n            };\n        case actionTypes.SET_UPCOMMING_MOVIES:\n            return {\n                ...state,\n                search: '',\n                movies: action.movies\n            };\n        case actionTypes.SET_SEARCHED_MOVIES:\n            return {\n                ...state,\n                movies: action.movies\n            }\n        default:\n            return state;\n        }\n}\nexport default reducer","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as actionTypes from '../../store/actions'\n\nclass Search extends Component {\n\n\n    searchHandler = (event) => {\n        event.preventDefault();\n        this.props.onInitSearchedMovies(this.props.searchText);\n    }\n\n    render() {\n        return (\n            <div className=\"py-10\">\n                <div className=\"flex justify-between bg-gray-600 rounded-full pl-5 mx-40\">\n                    <input \n                    className=\"bg-transparent outline-none text-3xl\"  \n                    placeholder=\"Search for a movie...\" type=\"text\"\n                        value={this.props.searchText}\n                        onChange={this.props.newSearch} />\n                    <button\n                        onClick={this.searchHandler}\n                        className=\"outline-none px-10 rounded-full bg-red-800\">GO\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchText: state.search\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        newSearch: (e) => {\n            dispatch({ type: actionTypes.FILTER_BY_VALUE, text: e.target.value })\n        }, \n        onInitSearchedMovies: (query) => \n            dispatch(actionTypes.initSearchedMovies(query))\n        }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport * as actionTypes from '../../store/actions'\n\nclass Categories extends Component {\n\n\n    render() {\n        return (\n            <div className=\"flex justify-center\">\n                <button \n                    className=\"outline-none px-10 py-1 m-1 rounded-full bg-gray-600\" \n                    onClick={this.props.onInitPopularMovies}>Popular</button>\n               \n                <button \n                    className=\"outline-none px-10 py-1 m-1 rounded-full bg-gray-600\" \n                    onClick={this.props.onInitTopRatedMovies}>Top Rated</button>\n                <button\n                    className=\"outline-none px-10 py-1 m-1 rounded-full bg-gray-600\"\n                    onClick={this.props.onInitUpcommingMovies}>Upcomming</button>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitPopularMovies: () => dispatch(actionTypes.initPopularMovies()),\n        onInitTopRatedMovies: () => dispatch(actionTypes.initTopRatedMovies()),\n        onInitUpcommingMovies: () => dispatch(actionTypes.initUpcommingMovies())\n        \n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Categories)","import React from 'react'\n\nfunction Movie_list_item(props) {\n    return (\n        <div className='flex flex-col flex-wrap justify-between w-64 m-2' >\n            \n            <img\n                className=\"w-64 h-auto\" \n                src={props.base_url+props.poster_size+props.poster} \n                alt=\"poster\"\n                onClick={props.clicked}/>\n            <div className=\"\">{props.releasedate}</div>\n            <div className=\"\">{props.vote}</div>\n        </div>\n    )\n}\n\nexport default Movie_list_item\n","import React, { Component } from 'react'\nimport MovieListItem from './Movie_list_item'\nimport * as actionTypes from '../../store/actions'\nimport { connect } from 'react-redux'\n\n\n\nclass Movie_list extends Component {\n\n\n\n    componentDidMount() {\n        this.props.onInitPopularMovies();\n    }\n\n    movieClickedHandler = (id) => {\n        this.props.onMovieIdClick(id);\n    } \n\n    render() {\n\n        if (this.props.selectedMovieId){\n            console.log('Got this id: ' + this.props.selectedMovieId)\n        }\n\n        let movielist = <div>Loading movies</div>\n        \n        if (this.props.movies){\n            movielist = this.props.movies.map(movie => {\n                return <MovieListItem\n                    key={movie.id}\n                    title={movie.title}\n                    releasedate={movie.release_date}\n                    vote={movie.vote_average}\n                    poster={movie.poster_path}\n                    base_url={this.props.base_url}\n                    poster_size={this.props.poster_size}\n                    clicked={() => this.movieClickedHandler(movie.id)}\n                    \n                />\n            });\n        }\n       \n        return (\n            <div className='flex flex-wrap justify-center mx-40'>\n                {movielist}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        movies: state.movies,\n        base_url: state.base_url,\n        poster_size: state.poster_size,\n        selectedMovieId: state.selectedMovieId \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitPopularMovies: () => dispatch(actionTypes.initPopularMovies()),\n        onInitTopRatedMovies: () => dispatch(actionTypes.initTopRatedMovies()),\n        onInitUpcommingMovies: () => dispatch(actionTypes.initUpcommingMovies()),\n        onMovieIdClick: (id) => dispatch({type: actionTypes.INIT_MOVIE_ID, movie_id: id}),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie_list)\n","import React, {Component} from 'react';\nimport Search from './components/search/Search'\nimport Categories from './components/categories/Categories'\nimport MovieList from './components/movie_list/Movie_list'\n\n\nclass App extends Component {\n\n\n  render (){\n   \treturn (\n      <div className=\"bg-red-900 text-gray-300\">\n          <Search/>\n          <Categories/>\n        \t<MovieList/>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport reducer from './store/reducer'\nimport thunk from 'redux-thunk'\n\nimport './assets/main.css';\nimport App from './App';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}